#!/bin/sh
# Build coding desktop in airlock from another Linux.
# 0BSD 2019 Denys Nykula <nykula@ukr.net>
# emerge -1u os-headers; eval "export `emerge --info 2>&1 |grep GS=`"
# wget http://musl.cc/armv7l-linux-musleabihf-native.tgz
# git clone https://github.com/nykula/acmd; acmd/world
w='wpa*t *bear tmux git ii mutt isync cy*{g,a}in ffm*4 *e-dl m*ssl gzip mksh'
w="$w yarn al*ls bl*sa udev way*s weston *erati* tang*"
for i in NetBSD/pkgsrc{,-wip} michaelforney/samurai landley/toybox
do(cd `basename $i`&&git pull)||git clone --depth=1 https://github.com/$i; done
cd toybox; umount root/*/*/{dev/pts,dev,proc,sys}; rm -r *x-*
tar xf ../*-native.tgz ||exit; cc=`realpath */bin`/`basename */*x-*`-
(cd */bin; ln -s *-cc cc); gmake CROSS_COMPILE=$cc HOSTCC="${cc}cc -static" \
  PATH="`dirname $cc`:$PATH" defconfig ||exit; sed -i "s/<(.*)/:/" s*/*
for i in BC DIFF EXPR GROUPADD GZIP ROUTE SH TR USERADD VI WGET
do sed -i s/.*_$i[=\ ].*/CONFIG_$i=y/ .config; done
mv root/*/*/usr/src/distfiles/* ../pkgsrc/distfiles
gmake CROSS_COMPILE=$cc PATH="`dirname $cc`:$PATH" root \
  CFLAGS="$CFLAGS -static" HOSTCC="${cc}cc -static"; cd root/*/*-fs/usr
(cd ../../../../*x-*; tar -cf- *) |tar -xf-; (cd *x-*; tar -cf- lib) |tar -xf-
rm -r *x-*; ln -s ../bin/cpp lib/cpp; cd ..; mv mnt var/run; mv root var
cd usr/bin; ln -s ../lib/ld-* ldd; ln -fs sh bash; cd ../..; mv init sbin
mkdir usr/pkg; mv etc usr/share/man usr/pkg; ln -s usr/pkg/etc etc
cp -r ../../../../pkgsrc usr/src; cp -r ../../../../pkgsrc-wip usr/src/wip
path="/bin:/sbin:/usr/pkg/bin:/usr/pkg/sbin:/`dirname $(find * -name cc1)`"
root() { env -i CFLAGS="$CFLAGS" PATH="$path" WORLD="$w" chroot . /bin/"$@"; }
root env |sed 's,HOME.*,MANPATH=/usr/pkg/man,;s/.*/export "&"/' >etc/profile
root sh -c "`grep mount.-t sbin/init`; exit"; cp -r ../../../../samurai usr/src
mv home var/guest; sed -i s/home/var/ etc/p*d; echo root:::::::: >etc/shadow
root sh -c 'groupadd -g12 mail; exit'; root install -dg12 var/mail
(cd usr/include; ls *.h sys/*.h |tr [:lower:] [:upper:] |
sed "s/[^A-Z]/_/g;s/.*/#define HAVE_& 1/"
for i in {BRACE_EXPAND,HAVE_{MEMSET,PROTOTYPES,STRCASECMP},JOBS,KSH}\ 1 \
  RETSIG{TYPE\ void,VAL} SIZEOF_{INT\ 4,LONG\ 8}; do echo \#define $i; done
cat ../../usr/src/*/pdksh/*/conf-end.h) >`ls -d usr/src/*/pdksh/files`/config.h
root kill -l |xargs echo |>`ls -d usr/src/*/pdksh/files`/siglist.out sed -E \
  's/([0-9]+)..(SIG(\S+))/{.signal=\1,.name="\3",.mess="\2"},\n/g'
root cc -o /bin/sh `find usr/src/*/pdksh/files/*.c -not -name "*-*"`
root su -c 'cc -o /bin/awk `find /usr/src/*/nawk/files/*.c -not -name *etab.c`
for i in MAKE_JOBS=`nproc` "PKG_DEFAULT_OPTIONS=-* openssl wayland" \
  PKG_OPTIONS.mutt=mutt-smtp\ sasl KRB5_DEFAULT=mit-krb5; do echo $i; done >/mk
cd /usr/src/*strap; ./b* --cwrappers=no --make-jobs=`nproc` --mk-fragment=/mk
cd /usr/src/*/bsdtar; bmake install clean clean-depends
ln -fs `which bsdtar` /bin/tar; cd /usr/src/samurai; bmake; cp samu /bin/ninja
sed -i "/GIT\|SUB\|CONF\|INST\|bin\|shar\|py/d" /usr/src/*/ninja-*/{M,P}*
cd /usr/src/*/curl; bmake fetch-list |sh; bmake install clean clean-depends
sed -i "s/^.endif/FETCH_USING=curl\n&/" /etc/mk.conf; rm /mk
for i in $WORLD; do for j in /usr/src/*/$i/; do cd $j; done; pwd
bmake fetch-list |sh; done
cd /usr/src/*/gzip; bmake install; rm /bin/zcat; ln -s `which zcat` /bin/zcat
cd /usr/src/*/mksh; bmake install; ln -fs `which mksh` /bin/sh
sed -i -e "s/\\(groupadd.*\\)-r/\\1-S/i" -e "s/-r -c/-S -c/" \
  -e "s/-c.*-d\(.*-s\)/-h\1/" -e "s/-g\( .group\)/-G\1/" \
  /usr/src/mk/*/usergroup*Linux; sed -i "/stscr\|webp/d" /usr/src/*/I*ck/{M,b}*
for i in MesaLib flex ge*ls gst* gtk3 *pg-er* l*xif l*dn xk*g
do sed -Ei "/\.mo$|glibc|au_r[^3]|upower/d" /usr/src/*/$i/{M,P}*; done
sed -i "s,cpp$,&;sed -i /_TLS/d \${WRKSRC}/*build," /usr/src/*/Mesa*b/M*
cd /usr/src/*/xinit; bmake install
sed -i s/.*inter.*trip.*/true/ /usr/src/*/python*/*/*/configure
cd /usr/src/*/wpa*t; echo CONFIG_DRIVER_WEXT=y >>*/defconfig; bmake install
sed -i "1s;^;#include <limits.h>\n;" /usr/src/*/libpcap/*/*/*-usb-linux.c
for i in $WORLD; do for j in /usr/src/*/$i/; do cd $j; done
bmake install clean clean-depends; done; pkg_admin unset automatic lynx mandoc
wpa_cli -h |awk /h:/{print\"ctrl_interface=DIR=\"\$3} >/etc/wpa_supplicant.conf
(cd /bin; echo -e "#!/bin/sh\nwhile case \$1 in -*)shift;;*)break;esac;do done
x=\`mktemp\`;>\$x cat \"\$@\";lynx \$x;rm \$x">more;chmod +x more;ln more less)
git config --system color.ui false; echo "text/html; cat %s |lynx -stdin
text/plain; iconv -tascii %s |fmt |more" >/etc/mailcap
for i in "\"%\" split-window -h" "\"\\\"\" split-window -v" "c new-window"
do echo bind $i -c \"#{pane_current_path}\"; done >/etc/tmux.conf' -
git clone ../../../../t*x usr/src/toybox; cp ../../../../t*x/.c*g usr/src/t*x
root sh -c 'cd /usr/src/t*x; sed -i "s/<(.*)/:/" s*/*; gmake; cp -f t*x /bin/'
